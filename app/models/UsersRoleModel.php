<?php

namespace Pbackbone\Model;

/**
 * RobotPartModel
 * @package Pbackbone\Models
 * @autogenerated by Phalcon Developer Tools
 * @date 2020-03-12, 06:15:37
 */
class UsersRoleModel extends \Phalcon\Mvc\Model
{

    /**
     *
     * @var integer
     * @Primary
     * @Identity
     * @Column(column="id", type="integer", nullable=false)
     */
    protected $id;

    /**
     *
     * @var integer
     * @Column(column="role_id", type="integer", nullable=true)
     */
    protected $roleId;

    /**
     *
     * @var integer
     * @Column(column="user_id", type="integer", nullable=true)
     */
    protected $userId;

    /**
     *
     * @var string
     * @Column(column="created_at", type="string", nullable=true)
     */
    protected $createdAt;

    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return UsersRoleModel
     */
    public function setId(int $id): UsersRoleModel
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field role_id
     *
     * @param integer $roleId
     * @return UsersRoleModel
     */
    public function setRoleId(?int $roleId): UsersRoleModel
    {
        $this->roleId = $roleId;

        return $this;
    }

    /**
     * Method to set the value of field user_id
     *
     * @param integer $userId
     * @return UsersRoleModel
     */
    public function setUserId(?int $userId): UsersRoleModel
    {
        $this->userId = $userId;

        return $this;
    }

    /**
     * Method to set the value of field created_at
     *
     * @param string $createdAt
     * @return UsersRoleModel
     */
    public function setCreatedAt(string $createdAt): UsersRoleModel
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer
     */
    public function getId(): int
    {
        return (int) $this->id;
    }

    /**
     * Returns the value of field roleId
     *
     * @return integer
     */
    public function getRoleId(): ?int
    {
        return $this->roleId;
    }

    /**
     * Returns the value of field userId
     *
     * @return integer|null
     */
    public function getUserId(): ?int
    {
        return $this->userId;
    }

    /**
     * Returns the value of field createdAt
     *
     * @return string
     */
    public function getCreatedAt(): string
    {
        return (string) $this->createdAt;
    }


    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        // $this->setSchema("phalcon-backbone");
        $this->setSource("users_role");

        $this->addBehavior(
            new \Phalcon\Mvc\Model\Behavior\Timestampable(
                [
                    'beforeCreate' => [
                        'field'  => 'createdAt',
                        'format' => 'Y-m-d H:i:s',
                    ],
                ]
            )
        );

        // * Sets a list of attributes that must be skipped from the generated UPDATE statement
        $this->skipAttributesOnUpdate(
            [
                'createdAt',
            ]
        );

        // * Sets if a model must use dynamic update instead of the all-field update
        $this->useDynamicUpdate(true);

        $this->belongsTo(
            'roleId',
            '\Pbackbone\Model\RoleModel',
            'id',
            [
                'alias' => 'role',
                'reusable' => true,
                'foreignKey' => [
                    'allowNulls' => true,
                    'message' => "relation id doesn't exist",
                ],
            ]
        );

        $this->belongsTo(
            'userId',
            '\Pbackbone\Model\UsersModel',
            'id',
            [
                'alias' => 'users',
                'reusable' => true,
                'foreignKey' => [
                    'allowNulls' => true,
                    'message' => "relation id doesn't exist",
                ],
            ]
        );
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return [
            'id' => 'id',
            'role_id' => 'roleId',
            'user_id' => 'userId',
            'created_at' => 'createdAt'
        ];
    }
}
